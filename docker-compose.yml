services:
# ElasticSearch settings
  elasticsearch:
    build: .
    container_name: es01
    hostname: es01
    environment:
    # cluster settings
      - node.name=es01
      - cluster.name=elasticsearch-cluster
      - discovery.type=single-node

    # security settings
      - xpack.security.enabled=true
      - ELASTIC_PASSWORD=${ELASTIC_PASSWORD:-admin@12345}
      
    # memory settings
      - ES_JAVA_OPTS=-Xms1g -Xmx1g

      - network.host=0.0.0.0

      - bootstrap.memory_lock=true
    ports:
      - "9200:9200"    # REST API
      - "9300:9300"    # 節點間要通訊，單機雖用不到但仍需保留
    volumes:
      - es_data:/usr/share/elasticsearch/data
      - es_logs:/usr/share/elasticsearch/logs
      # - es_plugins:/usr/share/elasticsearch/plugins
      # - ./config/analysis-ik:/usr/share/elasticsearch/config/analysis-ik:ro
      - ./data/import:/data/import:rw
# Linux 實機長需要; Mac/Win 通常不用更動
    ulimits:
      memlock:
        soft: -1
        hard: -1
      nofile: 
        soft: 262144
        hard: 262144
    
    healthcheck:
      test: ["CMD-SHELL", "curl -u elastic:${ELASTIC_PASSWORD:-admin@12345} -fsS http://localhost:9200/_cluster/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    restart: unless-stopped

    networks:
      - elastic

# kibana settings
  kibana:
    image: docker.elastic.co/kibana/kibana:8.15.1
    container_name: kibana
    hostname: kibana
    depends_on: 
    - elasticsearch
    environment:
    # connection settings
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
      - ELASTICSEARCH_USERNAME=kibana_system
      - ELASTICSEARCH_PASSWORD=kibana123
      # - ELASTICSEARCH_USERNAME=${KIBANA_USER:-elastic}
      # - ELASTICSEARCH_PASSWORD=${KIBANA_PASS:-admin@12345}
      

    # kibana server settings
      - SERVER_NAME=kibana
      - SERVER_HOST=0.0.0.0
      - SERVER_PORT=5601

    # language settings
      - I18N_LOCALE=zh-TW
      - I18N_DEFAULTLOCALE=zh-TW
      - KIBANA_DEFAULTAPPID=home
    ports:
      - "5601:5601"      #kibana Web
    volumes:
      - kibana_data:/usr/share/kibana/data

     # 健康檢查
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:5601/api/status || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 120s
    
    restart: unless-stopped
    networks:
      - elastic


# 自動檔案處理服務 ＆ 不同 SQL 連接
# MySQL 資料庫（測試用）
  mysql:
    image: mysql:8.0
    container_name: mysql-db
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD}
      MYSQL_DATABASE: ${MYSQL_DATABASE}
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - "3306:3306"
    volumes:
      - ./data/mysql:/var/lib/mysql
      - ./scripts/phase1/init_db.sql:/docker-entrypoint-initdb.d/01-init.sql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - elastic

  # 階段一：MySQL 同步服務
  mysql-sync:
    image: python:3.11-slim
    container_name: mysql-sync
    depends_on:
      mysql:
        condition: service_healthy
      elasticsearch:
        condition: service_healthy
    environment:
      - PYTHONPATH=/app
      - CONFIG_PATH=/app/config
      - LOG_PATH=/app/logs/sync
      - LOG_LEVEL=${LOG_LEVEL}
      - SYNC_MODE=${SYNC_MODE:-sync}
    env_file:
      - .env
    volumes:
      - ./scripts:/app/scripts:ro
      - ./config:/app/config:ro
      - ./logs/sync:/app/logs/sync:rw
    working_dir: /app
    command: >
      bash -c "
        pip install --no-cache-dir -r /app/config/requirements-sync.txt &&
        python scripts/phase1/main.py --mode init
      "
    restart: unless-stopped
    networks:
      - elastic

  
volumes:
  es_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/elasticsearch
  es_logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./logs/elasticsearch
  # es_plugins:
  #   driver: local
  #   driver_opts:
  #     type: none
  #     o: bind
  #     device: ./plugins/elasticsearch
  kibana_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ./data/kibana
  mysql-data:

networks:
  elastic:
    driver: bridge
